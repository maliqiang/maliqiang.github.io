<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>思远的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://maliqiang.github.io/"/>
  <updated>2019-03-12T05:35:33.042Z</updated>
  <id>https://maliqiang.github.io/</id>
  
  <author>
    <name>思远</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Drools在项目中的应用</title>
    <link href="https://maliqiang.github.io/2019/03/12/rools%E5%9C%A8%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>https://maliqiang.github.io/2019/03/12/rools在项目中的应用/</id>
    <published>2019-03-12T05:20:17.000Z</published>
    <updated>2019-03-12T05:35:33.042Z</updated>
    
    <content type="html"><![CDATA[<excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><p><the rest="" of="" contents="" |="" 余下全文=""><br><img src="/images/droolsExpertLogo.png" alt="drools"></the></p><p>❤️感兴趣的可以点击去看看源码，<a href="https://github.com/kiegroup/drools.git" target="_blank" rel="noopener">源码直通车</a></p><h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><h3 id="发展背景"><a href="#发展背景" class="headerlink" title="发展背景"></a>发展背景</h3><p>任何一家组织或企业都面临着作出决定或决策性的问题，这些问题通常比较复杂，一般都需要算法分析大量决策相关的数据，例如当前一些热门的话题，如物联网、人工智能、认知计算都基于算法分析海量数据，产生有用信息的过程。Drools 作为一个开源的推理引擎，有 20 年历史，基于规则匹配算法非常适用与与这一场景。</p><h3 id="主要使用场景"><a href="#主要使用场景" class="headerlink" title="主要使用场景"></a>主要使用场景</h3><p>基于 Drools 可以构建一个全面的业务自动化平台，用于业务规则管理，业务资源优化和复杂事件处理（CEP）。组织或企业可以将复杂的决策逻辑整合到业务线应用程序中，并在市场条件发生变化时快速更新基础业务规则，有效提高业务的能力。</p><blockquote><p>基于 Drools 业务决策自动化的主要特点：</p></blockquote><ul><li><p>业务敏捷 - 规则将业务规则和应用相关的考量(UI 展现，持久化)分开，您会有足够的灵活性，及时的响应市场的变化，增加响应时间和敏捷性。</p></li><li><p>实时响应 - 规则基于算法提供准确高效的计算，可持续处理数据，事件，让您看到风险与机遇并实时作出决策。</p></li><li><p>最优计划 - 最优计划制订依赖算法和数据，让您的业务计划科学可信，投资回报最大化。</p></li><li><p>高效合作 - 让业务专家和政策制定者与 IT 人员一起参与到业务系统构建，且两者作用相当。</p></li></ul><h2 id="二、实战"><a href="#二、实战" class="headerlink" title="二、实战"></a>二、实战</h2></excerpt>]]></content>
    
    <summary type="html">
    
      &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>datax使用简介</title>
    <link href="https://maliqiang.github.io/2019/02/26/datax/"/>
    <id>https://maliqiang.github.io/2019/02/26/datax/</id>
    <published>2019-02-26T10:09:00.000Z</published>
    <updated>2019-03-11T09:53:18.084Z</updated>
    
    <content type="html"><![CDATA[<excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>DataX 是阿里巴巴集团内被广泛使用的离线数据同步工具/平台，实现包括 MySQL、Oracle、SqlServer、Postgre、HDFS、Hive、ADS、HBase、TableStore(OTS)、MaxCompute(ODPS)、DRDS 等各种异构数据源之间高效的数据同步功能。</p><h2 id="下载-amp-安装"><a href="#下载-amp-安装" class="headerlink" title="下载&amp;安装"></a>下载&amp;安装</h2><p>可以直接下载编译的安装包，也可以自己下载源码进行编译。</p><blockquote><p>具体的安装步骤省略。下面列举运行datax需要的依赖环境：</p></blockquote><ul><li>jdk，推荐1.7以上</li><li>python 2.x</li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li>datax的对数据的同步主要是通过各种读、写插件来实现的。因此根据实际环境需要，选择配置对应的reader和writer插件就可以了。</li><li>datax默认job示例配置文件在安装包解压缩之后的job目录下，其配置是基于标准json格式。如不是标准化的json怎会抛出错误，具体问题还需具体去分析原因。</li><li><p>配置示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;job&quot;: &#123;</span><br><span class="line">        &quot;setting&quot;: &#123;</span><br><span class="line">            &quot;speed&quot;: &#123;</span><br><span class="line">                &quot;byte&quot;: 10485760</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;errorLimit&quot;: &#123;</span><br><span class="line">                &quot;record&quot;: 0,</span><br><span class="line">                &quot;percentage&quot;: 0.02</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;content&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;reader&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;mysql8reader&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;username&quot;: &quot;root&quot;,</span><br><span class="line">                        &quot;password&quot;: &quot;123&quot;,</span><br><span class="line">                        &quot;column&quot;: [&quot;*&quot;],</span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;jdbcUrl&quot;: [</span><br><span class="line">                                    &quot;jdbc:mysql://127.0.0.1:3306/test?characterEncoding=UTF8&quot;</span><br><span class="line">                                ],</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;total_weather&quot;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;where&quot;: &quot;&quot;,</span><br><span class="line">                        &quot;sliceRecordCount&quot;: 100000</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;writer&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;mysql8writer&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;username&quot;: &quot;root&quot;,</span><br><span class="line">                        &quot;password&quot;: &quot;frontfree&quot;,</span><br><span class="line">                        &quot;writeMode&quot;: &quot;replace&quot;,</span><br><span class="line">                        &quot;column&quot;: [</span><br><span class="line">                            &quot;Id&quot;,</span><br><span class="line">                            &quot;Temperature&quot;,</span><br><span class="line">                            &quot;Humidity&quot;,</span><br><span class="line">                            &quot;PM25&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;session&quot;: [],</span><br><span class="line">                        &quot;preSql&quot;: [],</span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;jdbcUrl&quot;: &quot;jdbc:mysql://192.168.1.225:3306/test?characterEncoding=UTF8&quot;,</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;total_weather&quot;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;print&quot;: false,</span><br><span class="line">                        &quot;encoding&quot;: &quot;UTF-8&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>注意配置里的column和preSql属性，具体参照datax官网。</p></li><li><p>配置好之后，运行python datax.py job文件路径（注意如果要执行单个的job，需要指定到具体的job配置文件；如果是执行目录下全部，指定到目录即可。）</p></li></ol></the></excerpt>]]></content>
    
    <summary type="html">
    
      &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="tech" scheme="https://maliqiang.github.io/categories/tech/"/>
    
    
      <category term="技术文章" scheme="https://maliqiang.github.io/tags/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>Docker常用命令</title>
    <link href="https://maliqiang.github.io/2019/01/18/docker/"/>
    <id>https://maliqiang.github.io/2019/01/18/docker/</id>
    <published>2019-01-18T09:15:03.000Z</published>
    <updated>2019-02-07T02:11:32.063Z</updated>
    
    <content type="html"><![CDATA[ <excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""><p><img src="/images/docker_logo.jpg" alt="docker"></p><h2 id="Docker常用命令"><a href="#Docker常用命令" class="headerlink" title="Docker常用命令"></a>Docker常用命令</h2><ol><li>一个docker镜像包含多个容器</li></ol><p>面向对象说法：镜像（类）–&gt;容器(对象)</p><ol start="2"><li><p>查看docker已下载镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure></li><li><p>搜索镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search 镜像名</span><br></pre></td></tr></table></figure></li><li><p>启动docker容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winpty docker run -i -t ubuntu</span><br></pre></td></tr></table></figure></li><li><p>启动docker服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service docker start 或者 systemctl start docker</span><br></pre></td></tr></table></figure></li><li><p>下载镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull XXX</span><br></pre></td></tr></table></figure></li><li><p>查看镜像的详细信息、架构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect name|id(镜像名或ID)</span><br></pre></td></tr></table></figure></li><li><p>运行docker容器（非第一次）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker start 容器id或者name</span><br><span class="line">gansu容器id ：ef218aeb0e36</span><br></pre></td></tr></table></figure></li><li><p>查看所有的容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure></li><li><p>进入容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 容器id /bin/bash</span><br></pre></td></tr></table></figure></li></ol></the></excerpt>]]></content>
    
    <summary type="html">
    
      &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="tech" scheme="https://maliqiang.github.io/categories/tech/"/>
    
    
      <category term="技术文章" scheme="https://maliqiang.github.io/tags/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>beego使用方法</title>
    <link href="https://maliqiang.github.io/2019/01/13/beego/"/>
    <id>https://maliqiang.github.io/2019/01/13/beego/</id>
    <published>2019-01-13T11:59:26.000Z</published>
    <updated>2019-01-25T01:53:16.707Z</updated>
    
    <content type="html"><![CDATA[<excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""><h2 id="beego使用方法"><a href="#beego使用方法" class="headerlink" title="beego使用方法"></a>beego使用方法</h2><ol><li>常用命令</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">bee command [arguments]</span><br><span class="line"></span><br><span class="line">The commands are:</span><br><span class="line"></span><br><span class="line">    version     show the bee &amp; beego version</span><br><span class="line">    migrate     run database migrations</span><br><span class="line">    api         create an api application base on beego framework</span><br><span class="line">    bale        packs non-Go files to Go source files    </span><br><span class="line">    new         create an application base on beego framework</span><br><span class="line">    run         run the app which can hot compile</span><br><span class="line">    pack        compress an beego project</span><br><span class="line">    fix         Fixes your application by making it compatible with newer versions of Beego</span><br><span class="line">    dlv         Start a debugging session using Delve</span><br><span class="line">    dockerize   Generates a Dockerfile for your Beego application</span><br><span class="line">    generate    Source code generator</span><br><span class="line">    hprose      Creates an RPC application based on Hprose and Beego frameworks</span><br><span class="line">    new         Creates a Beego application</span><br><span class="line">    pack        Compresses a Beego application into a single file</span><br><span class="line">    rs          Run customized scripts</span><br><span class="line">    run         Run the application by starting a local development server</span><br><span class="line">    server      serving static content over HTTP on port</span><br><span class="line">    </span><br><span class="line">Use bee help [command] for more information about a command.</span><br></pre></td></tr></table></figure><ol start="2"><li>创建项目</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bee new projectName</span><br></pre></td></tr></table></figure><ol start="3"><li>项目结构</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">│  hello-web.exe 【运行后生产的二进制执行文件】</span><br><span class="line">│  main.go 【入口文件】</span><br><span class="line">├─conf</span><br><span class="line">│------app.conf 【项目配置文件：包含项目名、端口、运行模式】</span><br><span class="line">├─controllers 【controller目录】</span><br><span class="line">│      default.go</span><br><span class="line">├─models 【功能抽取目录】</span><br><span class="line">├─routers</span><br><span class="line">│      router.go 【路由配置文件】</span><br><span class="line">├─static  【静态资源文件】</span><br><span class="line">│  ├─css</span><br><span class="line">│  ├─img</span><br><span class="line">│  └─js</span><br><span class="line">│-------reload.min.js</span><br><span class="line">├─tests</span><br><span class="line">│-------default_test.go 【单元测试文件】</span><br><span class="line">│      </span><br><span class="line">└─views  【模板目录】</span><br><span class="line">--------index.tpl</span><br></pre></td></tr></table></figure><ol start="4"><li>页面路由设置</li></ol><blockquote><p>1 url配置方式</p></blockquote><p>暂无，参考官方文档</p><blockquote><p>2 注解方式</p></blockquote><p>Controller覆写URLMapping方法，将对应的方法添加到Mapping，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">func (this *HomeController) URLMapping()&#123;</span><br><span class="line">this.Mapping(&quot;Home&quot;,this.Home)</span><br><span class="line">this.Mapping(&quot;Welcome&quot;,this.Welcome)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在方法上添加路由注解（有点像注释），具体如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// @router /home/ [get] 无参数，访问路径为：ip:port/home</span><br><span class="line"></span><br><span class="line">// @router /home/:key [get] 带参数，访问路径为：ip:port/home/sss</span><br></pre></td></tr></table></figure></p><p>在路由配置文件，加入如下配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//注解路由</span><br><span class="line">beego.Include(&amp;controllers.HomeController&#123;&#125;)</span><br></pre></td></tr></table></figure></p><p>5、 mvc架构</p><p><a href="&quot;https://beego.me/docs/images/detail.png&quot;">mvc架构图</a></p><p>6、 配置文件选项</p><p><a href="https://godoc.org/github.com/astaxie/beego#pkg-constants" target="_blank" rel="noopener">https://godoc.org/github.com/astaxie/beego#pkg-constants</a></p></the></excerpt>]]></content>
    
    <summary type="html">
    
      &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="技术" scheme="https://maliqiang.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="golang" scheme="https://maliqiang.github.io/tags/golang/"/>
    
      <category term="beego" scheme="https://maliqiang.github.io/tags/beego/"/>
    
      <category term="web框架" scheme="https://maliqiang.github.io/tags/web%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>上线说明</title>
    <link href="https://maliqiang.github.io/2019/01/13/hello-world/"/>
    <id>https://maliqiang.github.io/2019/01/13/hello-world/</id>
    <published>2019-01-13T11:15:37.000Z</published>
    <updated>2019-01-25T08:36:44.796Z</updated>
    
    <content type="html"><![CDATA[<excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""><p>这是一个测试文章！</p></the></excerpt>]]></content>
    
    <summary type="html">
    
      &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="2019" scheme="https://maliqiang.github.io/categories/2019/"/>
    
    
      <category term="杂文" scheme="https://maliqiang.github.io/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
</feed>
